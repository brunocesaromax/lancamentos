Status code:

2## -> Sucesso
4## -> Erro do cliente
5## -> Erro no serviço/servidor


##############OAuth2##############

4 Personagens principais:
- Usuário dono do recurso

        |
- Client qualquer
    |          requisicao de token || token devolvido
    |        - Authorization server (Servidor de autorização)
    |
- Resource Server (Servidor que contém os recursos)

Os dois últimos podem ser separados ou juntos (Grandes empresas usam separadamente),
no curso será juntos.

#########JWT##############

- site referência: jwt.io
- No token possui informações como: Algoritmo de codificação, informações de dados (Payload)
, quanto mais informações se querer enviar através do token, maior o mesmo será, uma assinatura
- Composição: header, payload e assinatura

##############Refresh Token##############
- Refresh Token -> Atualize o acessToken para não precisar de usuario e senha novamente
- Acess_token deve ser temporário por questão de segurança
- O refreshToken será guardado em um cookie seguro no https, ou seja, javascript não tem acesso
a esse cookie
- É boa prática colocar o refresh_token em um cookie para que a aplicação não tenha acesso
ao refresh_token
- É possível mostrar pelo wireshark que o cookie com o refresh token é enviado pelo postman,
porém a aplicação não sabe disso
