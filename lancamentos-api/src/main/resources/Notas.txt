Status code:

2## -> Sucesso
4## -> Erro do cliente
5## -> Erro no serviço/servidor


##############OAuth2##############

4 Personagens principais:
- Usuário dono do recurso

        |
- Client qualquer
    |          requisicao de token || token devolvido
    |        - Authorization server (Servidor de autorização)
    |
- Resource Server (Servidor que contém os recursos)

Os dois últimos podem ser separados ou juntos (Grandes empresas usam separadamente),
no curso será juntos.

#########JWT##############

- site referência: jwt.io
- No token possui informações como: Algoritmo de codificação, informações de dados (Payload)
, quanto mais informações se querer enviar através do token, maior o mesmo será, uma assinatura
- Composição: header, payload e assinatura

##############Refresh Token##############
- Refresh Token -> Atualize o acessToken para não precisar de usuario e senha novamente
- Acess_token deve ser temporário por questão de segurança
- O refreshToken será guardado em um cookie seguro no https, ou seja, javascript não tem acesso
a esse cookie
- É boa prática colocar o refresh_token em um cookie para que a aplicação não tenha acesso
ao refresh_token
- É possível mostrar pelo wireshark que o cookie com o refresh token é enviado pelo postman,
porém a aplicação não sabe disso

############# CORS ######################
-> Proteção implementada no Javascript que só pode fazer requisições para a mesma
origem (Solução: CORS)
->(Documentação) https://spring.io/guides/gs/rest-service-cors/
-> Ainda não foi implementado uma forma de integração do CORS com o spring security oauth2

############# HEROKU ######################
-> Link: www.heroku.com
-> $npm install -g heroku

Instruções:
- Git deve estar instalado na máquina
- Criar (nome deve ser único): $heroku create launchs-api
- Criar Mysql integrado a aplicação com o comando: $heroku addons:create jawsdb --app launchs-api
- Conteúdo da variável JAWSDB_URL :$heroku config:get JAWSDB_URL --app launchs-api
- mysql://rdcwkue9x5kezoan:ffp2aglx6f9zlkpp@jj820qt5lpu6krut.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/eayie26guar4jrbl
- Setando variáveis declaradas no properties de produção:
   $heroku config:set JDBC_DATABASE_URL=jdbc:mysql://jj820qt5lpu6krut.cbetxkdyhwsb.us-east-1.rds.amazonaws.com:3306/eayie26guar4jrbl JDBC_DATABASE_USERNAME=rdcwkue9x5kezoan JDBC_DATABASE_PASSWORD=ffp2aglx6f9zlkpp --app launchs-api
- Visualizar variáveis configuradas: $heroku config --app launchs-api
- Configurar o Procfile para que o heroku utilize o property de prod

